# V23: 1. Exercise - 'baby_names'
# (1) Wie viele Einträge gibt es insgesamt in der Tabelle baby_names?
	SELECT COUNT(*) FROM baby_names

# (2)  Wie viele männliche Personen (gender = M) wurden im Jahr 2010 geboren, die „Alex“ heißen?
	SELECT COUNT(*) FROM baby_names WHERE 
		("name" = 'Alex' AND "gender" = 'M' AND "year" = 2010)

# (3) Wie viele unterschiedliche Namen gibt es in unserer Tabelle… wenn:
# (3-1) Das Geschlecht egal ist (d.h. "Alex" für das Geschlecht M und "Alex" für das Geschlecht "F" zählt als der gleiche Name)
	SELECT COUNT(DISTINCT("name")) FROM baby_names 

# (3-2) Das Geschlecht nicht egal ist (d.h. "Alex" für das Geschlecht M und "Alex" für das Geschlecht "F" zählen als 2 unterschiedliche Namen)
	SELECT COUNT(DISTINCT("name", "gender")) FROM baby_names 

# (4) Welcher Baby-Name wurde in einem bestimmten Jahr exakt 19250 mal vergeben?
	SELECT * FROM baby_names WHERE count = 19250

# (5) Gibt es das Geschlecht „divers“ in unserer Tabelle? Kannst du das mit den dir bisher bekannten Befehlen herausfinden?
	SELECT DISTINCT("gender") FROM baby_names  

# V32: 2. Exercise - 'baby_names'
# (1) Wie viele unterschiedliche Vornamen gibt es, die mit „Alex“ anfangen, „Alex“ eingeschlossen? Hierbei spielt das Geschlecht keine Rolle.
	SELECT COUNT(DISTINCT("name")) FROM baby_names WHERE "name" LIKE 'Alex%' # -> 20 

# (2) Wie viele unterschiedliche Vornamen gibt es, in denen im Vornamen ein „m“ enthalten ist? Das „m“ darf auch an erster Stelle stehen.  
	SELECT COUNT(DISTINCT("name")) FROM baby_names WHERE "name" LIKE '%m%' OR "name" LIKE 'M%' # -> 1183	

# (3) Wie viele Zeilen gibt es in der Tabelle, bei denen das Jahr im 20. Jahrhundert (1900 bis einschließlich 1999) ist?
#     -> einmal mit BETWEEN einmal ohne
	SELECT COUNT("year") FROM baby_names WHERE "year" BETWEEN 1900 AND 1999      # -> 100
	SELECT COUNT("year") FROM baby_names WHERE "year" >= 1900 AND "year" <= 1999 # -> 100

# (4) Wie viele Zeilen gibt es in der Tabelle, bei denen das Jahr im 20. Jahrhundert (1900 bis einschließlich 1999) ist, und durch 10 Teilbar ist?
#	  -> Löse diese Aufgabe mit vielen ORs
#	  -> Löse diese Aufgabe mit einem WHERE IN()
# 	  -> Löse die Aufgabe mit einem LIKE
#     -> Löse diese Aufgabe mit einem Modulo
	SELECT COUNT("year") FROM baby_names WHERE 
		"year" = 1900 OR "year" = 1910 OR "year" = 1920 OR "year" = 1930 OR
	    "year" = 1940 OR "year" = 1950 OR "year" = 1960 OR "year" = 1970 OR
	    "year" = 1980 OR "year" = 1990           							   # -> 15307

	SELECT COUNT("year") FROM baby_names WHERE 
		"year" IN (1990, 1980, 1970, 1960, 1950, 1940, 1930, 1920, 1910, 1900) # -> 15307

	SELECT COUNT("year") FROM baby_names WHERE year::varchar LIKE '19_0'       # -> 15307

	SELECT COUNT("year") FROM baby_names WHERE 								   # -> 15307
		"year"%10 = 0 AND year BETWEEN 1900 AND 1999

# V41: 3. Exercise - 'baby_names'
# (1) Welcher Vorname kam insgesamt (d.h. für ein beliebiges Geschlecht in einem beliebigen Jahr) am häufigsten vor?
	SELECT * FROM baby_names ORDER BY "count" DESC LIMIT 3 # -> Linda

# (2) Welches Jahr ist das erste Jahr in unserer Datenbasis?
#		-> Löse dies mit Hilfe der MIN()-Funktion
#		-> Löse dies ohne die MIN()-Funktion
	SELECT MIN("year") FROM baby_names                               # -> 1880
	SELECT DISTINCT("year") FROM baby_names ORDER BY "year" LIMIT 5  # -> 1880

# (3) Wie viele unterschiedliche Vornamen gibt es, die aus exakt 5 Buchstaben bestehen?
#		-> Löse dies mit einem WHERE und der LENGTH()-Funktion
#		-> Löse dies mit einem WHERE und einem LIKE (hier gab es einen speziellen Platzhalter)
	SELECT COUNT(DISTINCT("name")) FROM baby_names WHERE LENGTH("name") = 5  # -> 1590
	SELECT COUNT(DISTINCT("name")) FROM baby_names WHERE "name" LIKE '_____' # -> 1590

# (4) Wie viele Babys sind für das Jahr 2000 insgesamt in unserer Datenbasis? Berechne hier die Summe aller Einträge!
	SELECT SUM(count) FROM baby_names WHERE year = 2020 # -> 3.320.671

# (5) Wenn wir alle unterschiedlichen Vornamen betrachten (Geschlecht ist egal), und aufsteigend alphabetisch sortieren… 
#     Welcher Vorname steht auf der 2. Seite ganz oben, wenn die erste Seite aus 10 Einträgen besteht?
	SELECT DISTINCT("name") FROM baby_names ORDER BY "name" OFFSET 10 LIMIT 1 # -> Aarna

